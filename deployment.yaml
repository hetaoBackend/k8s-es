---
apiVersion: v1
kind: Namespace
metadata:
  name: elasticsearch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch-admin
  namespace: elasticsearch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elasticsearch-admin
  labels:
    app: elasticsearch
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: elasticsearch-admin
    namespace: elasticsearch

---
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  labels:
    app: elasticsearch
    role: master
  name: elasticsearch-master
  namespace: elasticsearch
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: elasticsearch
      role: master
  template:
    metadata:
      labels:
        app: elasticsearch
        role: master
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch
              - key: role
                operator: In
                values:
                - master
            topologyKey: kubernetes.io/hostname
      containers:
        - name: elasticsearch-master
          image: elasticsearch-shannon:latest
          imagePullPolicy: "IfNotPresent"
          #resources:
          #  requests:
          #    cpu: 1
          #    memory: 1Gi
          #  limits:
          #    cpu: 2
          #    memory: 4Gi
          env:
          - name: ES_JAVA_OPTS
            value: -Xms256m -Xmx256m
          - name: NODE_MASTER
            value: "true"
          - name: NODE_DATA
            value: "false"
          - name: NETWORK_HOST
            value:  _site_,_lo_
          - name: MASTER_NUM
            value: "2"
          ports:
            - containerPort: 9300
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9300
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 9300
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
          - name: conf-volume
            mountPath: /home/work/conf
          - name: logs-volume
            mountPath: /home/work/logs
          - name: data-volume
            mountPath: /home/work/data
      volumes:
        - name: "conf-volume"
          hostPath:
            path: /home/ubuntu/es/conf
            type: Directory
        - name: "logs-volume"
          emptyDir: {}
        - name: "data-volume"
          emptyDir: {}
      serviceAccountName: elasticsearch-admin
      nodeSelector: 
        elasticsearch: "true"

---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch-discovery
  namespace: elasticsearch
spec:
  ports:
    - port: 9300
      targetPort: 9300
  selector:
    app: elasticsearch
    role: master

---
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  labels:
    app: elasticsearch
    role: data
  name: elasticsearch-data
  namespace: elasticsearch
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: elasticsearch
      role: data
  template:
    metadata:
      labels:
        app: elasticsearch
        role: data
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch
              - key: role
                operator: In
                values:
                - data
            topologyKey: kubernetes.io/hostname
      containers:
        - name: elasticsearch-data
          image: elasticsearch-shannon:latest
          imagePullPolicy: "IfNotPresent"
          #resources:
          #  requests:
          #    cpu: 1
          #    memory: 1Gi
          #  limits:
          #    cpu: 2
          #    memory: 4Gi
          env:
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          - name: NODE_MASTER
            value: "false"
          - name: NODE_DATA
            value: "true"
          - name: MASTER_NUM
            value: "2"
          ports:
            - containerPort: 9200
              protocol: TCP
            - containerPort: 9300
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9300
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: data-volume
              mountPath: /home/work/data
            - name: logs-volume
              mountPath: /home/work/logs
            - name: conf-volume
              mountPath: /home/work/conf    
      volumes:
        - name: "conf-volume"
          hostPath:
            path: /home/ubuntu/es/conf
            type: Directory
        - name: "logs-volume"
          emptyDir: {}
        - name: "data-volume"
          hostPath:
            path: /home/ubuntu/data
            type: Directory
      serviceAccountName: elasticsearch-admin
      nodeSelector: 
        elasticsearch: "true"

---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch-service
  namespace: elasticsearch
spec:
  type: NodePort 
  ports:
    - port: 9200
      targetPort: 9200
      nodePort: 30324
  selector:
    app: elasticsearch
    role: data
    #clusterIP: None

  #---
  #apiVersion: extensions/v1beta1
  #kind: Ingress
  #metadata:
  #  name: elasticsearch-search
  #  namespace: elasticsearch
  #  annotations:
  #    kubernetes.io/ingress.class: traefik
  #spec:
  #  rules:
  #  - host: es.shannonai-test.com
  #    http:
  #      paths:
  #      - path: /
  #        backend:
  #          serviceName: elasticsearch-service
  #          servicePort: 9200
